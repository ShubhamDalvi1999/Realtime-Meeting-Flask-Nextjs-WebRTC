version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=meetingapp
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=dev-password-123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev_user -d meetingapp"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass dev-redis-123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "dev-redis-123", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend/flask-service
      dockerfile: Dockerfile
    environment:
      - FLASK_APP=src.app
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://dev_user:dev-password-123@postgres:5432/meetingapp
      - REDIS_URL=redis://:dev-redis-123@redis:6379/0
      - JWT_SECRET_KEY=dev-jwt-secret-123
      - CORS_ORIGINS=http://localhost:3000
      - PYTHONUNBUFFERED=1
    ports:
      - "5000:5000"
    volumes:
      - ./backend/flask-service:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  websocket:
    build:
      context: ./backend/node-service
      dockerfile: Dockerfile
    environment:
      - JWT_SECRET_KEY=dev-jwt-secret-123
      - CORS_ORIGINS=http://localhost:3000
      - REDIS_URL=redis://:dev-redis-123@redis:6379/0
    ports:
      - "3001:3001"
    volumes:
      - ./backend/node-service:/app
      - /app/node_modules
    depends_on:
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:5000
      - NEXT_PUBLIC_WS_URL=ws://localhost:3001
      - NEXT_PUBLIC_BASE_URL=http://localhost:3000
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      backend:
        condition: service_healthy
      websocket:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: 